Unnamed PL/SQL code block: Use of Control structure and Exception handling is mandatory.
Write a PL/SQL block of code for the following requirements:-
Schema:
1. Borrower(Rollin, Name, DateofIssue, NameofBook, Status)
2. Fine(Roll_no,Date,Amt)
Accept roll_no & name of book from user.
Check the number of days (from date of issue), if days are between 15 to 30 then fine
amount will be Rs 5per day.
If no. of days>30, per day fine will be Rs 50 per day & for days less than 30, Rs. 5 per
day.
After submitting the book, status will change from I to R.
If condition of fine is true, then details will be stored into fine table.

-- Create the Borrower table
CREATE TABLE Borrower (
    Roll_no INT PRIMARY KEY,
    Name VARCHAR(255),
    DateofIssue DATE,
    NameofBook VARCHAR(255),
    Status CHAR(1)
);

-- Create the Fine table
CREATE TABLE Fine (
    Roll_no INT,
    Date DATE,
    Amt DECIMAL(10, 2)
);

-- Insert sample data into the Borrower table
INSERT INTO Borrower (Roll_no, Name, DateofIssue, NameofBook, Status)
VALUES (1, 'John Doe', '2023-10-10', 'Book1', 'I');

-- Insert sample data into the Fine table
INSERT INTO Fine (Roll_no, Date, Amt)
VALUES (1, '2023-10-31', 100.00);


# You can achieve this using a PL/SQL code block with control structures and exception handling as follows:
-- Declare variables
DECLARE
   v_roll_no Borrower.Rollin%TYPE;
   v_nameofbook Borrower.NameofBook%TYPE;
   v_dateofissue Borrower.DateofIssue%TYPE;
   v_status Borrower.Status%TYPE;
   v_days NUMBER;
   v_fine_amt NUMBER := 0;
BEGIN
   -- Accept user input
   v_roll_no := &roll_no;
   v_nameofbook := '&nameofbook';

   -- Fetch borrower details
   SELECT DateofIssue, Status
   INTO v_dateofissue, v_status
   FROM Borrower
   WHERE Rollin = v_roll_no AND NameofBook = v_nameofbook;

   -- Calculate the number of days
   v_days := TRUNC(SYSDATE - v_dateofissue);

   -- Check for fine conditions
   IF v_days > 30 THEN
      v_fine_amt := 50 * (v_days - 30);
   ELSIF v_days >= 15 THEN
      v_fine_amt := 5 * (v_days - 14);
   END IF;

   -- Update the status to 'R'
   IF v_fine_amt > 0 THEN
      UPDATE Borrower
      SET Status = 'R'
      WHERE Rollin = v_roll_no AND NameofBook = v_nameofbook;

      -- Insert fine details
      INSERT INTO Fine (Roll_no, Date, Amt)
      VALUES (v_roll_no, SYSDATE, v_fine_amt);

      -- Commit the transaction
      COMMIT;
      
      DBMS_OUTPUT.PUT_LINE('Fine of Rs ' || v_fine_amt || ' has been imposed.');
   ELSE
      DBMS_OUTPUT.PUT_LINE('No fine imposed. The book has been returned.');
   END IF;

EXCEPTION
   WHEN NO_DATA_FOUND THEN
      DBMS_OUTPUT.PUT_LINE('Borrower not found for the given roll_no and book name.');
   WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('An error occurred: ' || SQLERRM);
END;
/
